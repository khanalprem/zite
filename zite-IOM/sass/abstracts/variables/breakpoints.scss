// Breakpoints
$breakpoint-xl-desktop: 'only screen and (max-width:1600px)';
$breakpoint-ls-desktop: 'only screen and (max-width:1540px)';
$breakpoint-desktop: 'only screen and (max-width:1440px)';
$breakpoint-md-desktop: 'only screen and (max-width:1368px)';

$breakpoint-xl: 'only screen and (max-width:1199px)';

$breakpoint-ls: 'only screen and (max-width:1024px)';

$breakpoint-lg: 'only screen and (max-width:991px)';

$breakpoint-pt: 'only screen and (max-width:768px)';

$breakpoint-md: 'only screen and (max-width:767px)';

$breakpoint-sm: 'only screen and (max-width:576px)';

$breakpoint-xs: 'only screen and (max-width:480px)';
$breakpoint-xxs: 'only screen and (max-width:360px)';

$breakpoint-xs-landscape: 'only screen and (max-width:480px) and (max-width:767px)';

// calling method

// @media #{$breakpoint-xl}{
    
// }

// case where behavior is responsive, or with a marker class
@mixin media-breakpoint-down-or($breakpoint, $name) {
    #{unquote($name)} {
      @content;
    }
  
    @include media-breakpoint-down($breakpoint) {
      @content;
    }
  }
  
  // case where behavior is responsive, or with a marker class
  @mixin media-breakpoint-up-or($breakpoint, $name) {
    #{unquote($name)} {
      @content;
    }
  
    @include media-breakpoint-up($breakpoint) {
      @content;
    }
  }
  
  // Name of the previous breakpoint, or null
  //
  //    >> breakpoint-next(sm)
  //    xs
  //    >> breakpoint-next(sm, (xs: 0, sm: 544px, md: 768px))
  //    xs
  //    >> breakpoint-next(sm, $breakpoint-names: (xs sm md))
  //    xs
  @function breakpoint-previous($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
    $n: index($breakpoint-names, $name);
    @return if($n > 1, nth($breakpoint-names, $n - 1), null);
  }